{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["Negociacao","NegociacaoDAO","ConnectionFactory","HttpService","NegociacaoService","_http","Promise","resolve","reject","get","then","negociacoes","objects","map","Date","obj","data","quantidade","valor","catch","console","log","error","all","importaSemana","importaAnterior","importaRetrasada","results","reduce","allResult","thisResult","concat","existentes","importaTodas","filter","some","existente","equals","negociacao","getConnection","connection","dao","adiciona","Error","listaTodas","_mensagem","texto","removeTodas"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {Negociacao} from '../models/Negociacao'\r\nimport {NegociacaoDAO} from '../daos/NegociacaoDAO'\r\nimport {ConnectionFactory} from './ConnectionFactory'\r\nimport {HttpService} from './HttpService'\r\n\r\n/* request negociacoes data from server */\r\nexport class NegociacaoService {\r\n\r\n\tconstructor() {\r\n\t\tthis._http = new HttpService()\r\n\t}\r\n\r\n\timportaSemana() {\r\n\t\t/* encapsulates HttpService.get Promise to return list of Negociacao instance */\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._http.get('/negociacoes/semana')\r\n\t\t\t\t.then(objects => {\r\n\t\t\t\t\tlet negociacoes = objects.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))\r\n\t\t\t\t\tresolve(negociacoes)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\treject(\"Não foi possível importar as negociações da semana\")\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\timportaAnterior() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._http.get('/negociacoes/anterior')\r\n\t\t\t\t.then(objects => {\r\n\t\t\t\t\tlet negociacoes = objects.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))\r\n\t\t\t\t\tresolve(negociacoes)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\treject(\"Não foi possível importar as negociações da semana\")\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\timportaRetrasada() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tthis._http.get('/negociacoes/retrasada')\r\n\t\t\t\t.then(objects => {\r\n\t\t\t\t\tlet negociacoes = objects.map(obj => new Negociacao(new Date(obj.data), obj.quantidade, obj.valor))\r\n\t\t\t\t\tresolve(negociacoes)\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tconsole.log(error)\r\n\t\t\t\t\treject(\"Não foi possível importar as negociações da semana\")\r\n\t\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\timportaTodas() {\r\n\t\t/* try to return all negociacoes from all services */\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tPromise.all([\r\n\t\t\t\tthis.importaSemana()\r\n\t\t\t\t, this.importaAnterior()\r\n\t\t\t\t, this.importaRetrasada()\r\n\t\t\t]).then(results => { // the result of each promise\r\n\t\t\t\t/* group all negociacao */\r\n\t\t\t\tlet negociacoes = results.reduce((allResult, thisResult) => allResult.concat(thisResult))\r\n\t\t\t\tresolve(negociacoes)\r\n\t\t\t}).catch(error => reject(error))\r\n\t\t})\r\n\t}\r\n\r\n\timporta(existentes) {\r\n\t\treturn this.importaTodas()\r\n\t\t\t.then(negociacoes =>\r\n\t\t\t\tnegociacoes.filter(negociacao =>\r\n\t\t\t\t\t!existentes.some(existente =>\r\n\t\t\t\t\t\texistente.equals(negociacao)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t)\r\n\t}\r\n\r\n\tcadastra(negociacao) {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDAO(connection))\r\n\t\t\t.then(dao => dao.adiciona(negociacao))\r\n\t\t\t.then(() => 'Negociação adicionada com sucesso!')\r\n\t\t\t.catch(error => { throw new Error('Não foi possível adicionar a negociação.') })\r\n\t}\r\n\r\n\tlistaCadastradas() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDAO(connection))\r\n\t\t\t.then(dao => dao.listaTodas())\r\n\t\t\t.catch(error => { this._mensagem.texto = error })\r\n\t}\r\n\r\n\tapagaTodas() {\r\n\t\treturn ConnectionFactory.getConnection()\r\n\t\t\t.then(connection => new NegociacaoDAO(connection))\r\n\t\t\t.then(dao => dao.removeTodas())\r\n\t\t\t.then(() => 'Todos as negociações foram apagadas!')\r\n\t\t\t.catch(error => { throw new Error('Não foi possível apagar as negociações.') })\r\n\t}\r\n\r\n}\r\n"]}
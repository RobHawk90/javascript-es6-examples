{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","data","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAAaA,W;;;;;;;yBAERC,G,EAAK;AAAA;;AACR,aAAOC,MAAMD,GAAN,EACLE,IADK,CACA;AAAA,cAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,OADA,EAELF,IAFK,CAEA;AAAA,cAAOE,IAAIC,IAAJ,EAAP;AAAA,OAFA,CAAP;AAGA;;;0BAEIL,G,EAAKM,I,EAAM;AAAA;;AACf,aAAOL,MAAMD,GAAN,EAAW;AACjBO,gBAAS,EAAE,gBAAgB,kBAAlB,EADQ;AAEfC,eAAQ,MAFO;AAGfC,aAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHS,OAAX,EAKLJ,IALK,CAKA;AAAA,cAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,OALA,CAAP;AAMA;;;mCAGaA,G,EAAK;AAClB,UAAG,CAACA,IAAIQ,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACZ,aAAOV,GAAP;AACA","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n\r\n\tget(url) {\r\n\t\treturn fetch(url)\r\n\t\t\t.then(res => this._handleErrors(res))\r\n\t\t\t.then(res => res.json())\r\n\t}\r\n\r\n\tpost(url, data) {\r\n\t\treturn fetch(url, {\r\n\t\t\theaders: { 'Content-type': 'application/json' }\r\n\t\t\t, method: 'post'\r\n\t\t\t, body: JSON.stringify(data)\r\n\t\t})\r\n\t\t\t.then(res => this._handleErrors(res))\r\n\t}\r\n\r\n\t/* if response is not ok, force catch promise */\r\n\t_handleErrors(res) {\r\n\t\tif(!res.ok) throw new Error(res.statusText)\r\n\t\treturn res\r\n\t}\r\n\r\n}\r\n"]}
{"version":3,"sources":["../../app-es6/services/ProxyFactory.js"],"names":["ProxyFactory","Error","model","props","callback","Proxy","get","target","prop","receiver","includes","_isFunction","result","Reflect","apply","arguments","set","value","Function"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2BAAaA,Y;AAEZ,4BAAc;AAAA;;AAAE,WAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AAAoE;;;;4BAEtEC,K,EAAOC,K,EAAOC,Q,EAAU;AACrC,aAAO,IAAIC,KAAJ,CAAUH,KAAV,EAAiB;AACvBI,YAAK,aAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,EAA4B;AAChC;AACA,YAAGN,MAAMO,QAAN,CAAeF,IAAf,KAAwBR,aAAaW,WAAb,CAAyBJ,MAAzB,EAAiCC,IAAjC,CAA3B,EAAmE;AAClE,gBAAO,YAAW;AACjB;AACA,cAAII,SAASC,QAAQC,KAAR,CAAcP,OAAOC,IAAP,CAAd,EAA4BD,MAA5B,EAAoCQ,SAApC,CAAb;AACAX,qBAHiB,CAGN;AACX,iBAAOQ,MAAP,CAJiB,CAIH;AACd,UALD;AAMA;AACD,eAAOC,QAAQP,GAAR,CAAYC,MAAZ,EAAoBC,IAApB,EAA0BC,QAA1B,CAAP;AACA,QAZsB;AAavBO,YAAK,aAACT,MAAD,EAASC,IAAT,EAAeS,KAAf,EAAsBR,QAAtB,EAAmC;AACvC,YAAIG,SAASC,QAAQG,GAAR,CAAYT,MAAZ,EAAoBC,IAApB,EAA0BS,KAA1B,EAAiCR,QAAjC,CAAb;AACA,YAAGN,MAAMO,QAAN,CAAeF,IAAf,CAAH,EAAyBJ;AACzB,eAAOQ,MAAP;AACA;AAjBsB,OAAjB,CAAP;AAmBA;;;iCAGkBL,M,EAAQC,I,EAAM;AAChC,aAAO,QAAOD,OAAOC,IAAP,CAAP,cAAgCU,QAAhC,yCAAgCA,QAAhC,EAAP;AACA","file":"ProxyFactory.js","sourcesContent":["export class ProxyFactory {\r\n\r\n\tconstructor() { throw new Error(\"ProxyFactory is static and can't be instancied.\") }\r\n\r\n\tstatic create(model, props, callback) {\r\n\t\treturn new Proxy(model, {\r\n\t\t\tget: (target, prop, receiver) => {\r\n\t\t\t\t/* if prop is a prop that changes the view */\r\n\t\t\t\tif(props.includes(prop) && ProxyFactory._isFunction(target, prop)) {\r\n\t\t\t\t\treturn function() {\r\n\t\t\t\t\t\t/* arguments is auto injected in function() {}; changing its state */\r\n\t\t\t\t\t\tlet result = Reflect.apply(target[prop], target, arguments)\r\n\t\t\t\t\t\tcallback() // updating the view\r\n\t\t\t\t\t\treturn result // returning model state\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Reflect.get(target, prop, receiver)\r\n\t\t\t},\r\n\t\t\tset: (target, prop, value, receiver) => {\r\n\t\t\t\tlet result = Reflect.set(target, prop, value, receiver)\r\n\t\t\t\tif(props.includes(prop)) callback()\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/* verify if the target's prop is a function */\r\n\tstatic _isFunction(target, prop) {\r\n\t\treturn typeof(target[prop]) === typeof(Function)\r\n\t}\r\n\r\n}\r\n"]}
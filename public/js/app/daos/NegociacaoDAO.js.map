{"version":3,"sources":["../../app-es6/daos/NegociacaoDAO.js"],"names":["NegociacaoDAO","connection","_connection","_store","negociacao","Promise","resolve","reject","addRequest","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","negociacoes","cursor","openCursor","result","value","push","Negociacao","Date","_data","_quantidade","_valor","continue","clearRequest","clear"],"mappings":";;;;;;AAAA;IACMA,a;AAEL,wBAAYC,UAAZ,EAAwB;AAAA;;AACvB,OAAKC,WAAL,GAAmBD,UAAnB;AACA,OAAKE,MAAL,GAAc,aAAd;AACA;;;;2BAEQC,U,EAAY;AAAA;;AACpB,UAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIC,aAAa,MAAKN,WAAL,CACfO,WADe,CACH,CAAC,MAAKN,MAAN,CADG,EACY,WADZ,EACyB;AADzB,KAEfO,WAFe,CAEH,MAAKP,MAFF,EAEU;AAFV,KAGfQ,GAHe,CAGXP,UAHW,CAAjB,CADuC,CAIrB;;AAElBI,eAAWI,SAAX,GAAuB;AAAA,YAAMN,SAAN;AAAA,KAAvB;AACAE,eAAWK,OAAX,GAAqB,aAAK;AACzBC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,YAAO,0CAAP;AACA,KAHD;AAIA,IAXM,CAAP;AAYA;;;+BAEY;AAAA;;AACZ,UAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIY,cAAc,EAAlB;;AAEA,QAAIC,SAAS,OAAKlB,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,UADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGXkB,UAHW,EAAb,CAHuC,CAMxB;;AAEfD,WAAOR,SAAP,GAAmB,aAAK;AACvB,SAAIU,SAASN,EAAEC,MAAF,CAASK,MAAtB,CADuB,CACM;;AAE7B,SAAGA,MAAH,EAAW;AAAE;AACZ,UAAIC,QAAQD,OAAOC,KAAnB;AACAJ,kBAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAe,IAAIC,IAAJ,CAASH,MAAMI,KAAf,CAAf,EAAsCJ,MAAMK,WAA5C,EAAyDL,MAAMM,MAA/D,CAAjB;AACAP,aAAOQ,QAAP,GAHU,CAGQ;AAClB,MAJD,MAIOxB,QAAQa,WAAR,EAPgB,CAOK;AAC5B,KARD;;AAUAC,WAAOP,OAAP,GAAiB,aAAK;AACrBC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,YAAO,+CAAP;AACA,KAHD;AAIA,IAtBM,CAAP;AAuBA;;;gCAEa;AAAA;;AACb,UAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC,QAAIwB,eAAe,OAAK7B,WAAL,CACjBO,WADiB,CACL,CAAC,OAAKN,MAAN,CADK,EACU,WADV,EAEjBO,WAFiB,CAEL,OAAKP,MAFA,EAGjB6B,KAHiB,EAAnB,CADuC,CAI7B;;AAEVD,iBAAanB,SAAb,GAAyB;AAAA,YAAMN,SAAN;AAAA,KAAzB;AACAyB,iBAAalB,OAAb,GAAuB,aAAK;AAC3BC,aAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,YAAO,yCAAP;AACA,KAHD;AAIA,IAXM,CAAP;AAYA","file":"NegociacaoDAO.js","sourcesContent":["/* abstracts all data manipulation from indexedDB store 'negociacoes' */\r\nclass NegociacaoDAO {\r\n\r\n\tconstructor(connection) {\r\n\t\tthis._connection = connection\r\n\t\tthis._store = 'negociacoes'\r\n\t}\r\n\r\n\tadiciona(negociacao) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet addRequest = this._connection\r\n\t\t\t\t.transaction([this._store], 'readwrite') // init transaction\r\n\t\t\t\t.objectStore(this._store) // open store\r\n\t\t\t\t.add(negociacao) // try to add the object in store\r\n\r\n\t\t\taddRequest.onsuccess = () => resolve()\r\n\t\t\taddRequest.onerror = e => {\r\n\t\t\t\tconsole.log(e.target.error)\r\n\t\t\t\treject('Não foi possível adicionar a negociacao.')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tlistaTodas() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet negociacoes = []\r\n\r\n\t\t\tlet cursor = this._connection\r\n\t\t\t\t.transaction([this._store], 'readonly')\r\n\t\t\t\t.objectStore(this._store)\r\n\t\t\t\t.openCursor() // returns an object for data reading iteration\r\n\r\n\t\t\tcursor.onsuccess = e => {\r\n\t\t\t\tlet result = e.target.result // try to get actual result\r\n\r\n\t\t\t\tif(result) { // if is not the end of the cursor or there is data\r\n\t\t\t\t\tlet value = result.value\r\n\t\t\t\t\tnegociacoes.push(new Negociacao(new Date(value._data), value._quantidade, value._valor))\r\n\t\t\t\t\tresult.continue() // move pointer to next possible result\r\n\t\t\t\t} else resolve(negociacoes) // cursor iteration ends\r\n\t\t\t}\r\n\r\n\t\t\tcursor.onerror = e => {\r\n\t\t\t\tconsole.log(e.target.error)\r\n\t\t\t\treject('Não foi possível obter as negociações salvas.')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tremoveTodas() {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tlet clearRequest = this._connection\r\n\t\t\t\t.transaction([this._store], 'readwrite')\r\n\t\t\t\t.objectStore(this._store)\r\n\t\t\t\t.clear() // remove all data in store\r\n\r\n\t\t\tclearRequest.onsuccess = () => resolve()\r\n\t\t\tclearRequest.onerror = e => {\r\n\t\t\t\tconsole.log(e.target.error)\r\n\t\t\t\treject('Não foi possível apagar as negociações.')\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n}\r\n"]}
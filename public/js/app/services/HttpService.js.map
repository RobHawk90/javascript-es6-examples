{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","url","fetch","then","_handleErrors","res","json","data","headers","method","body","JSON","stringify","ok","Error","statusText"],"mappings":";;;;;;IAAMA,W;;;;;;;sBAEDC,G,EAAK;AAAA;;AACR,UAAOC,MAAMD,GAAN,EACLE,IADK,CACA;AAAA,WAAO,MAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,IADA,EAELF,IAFK,CAEA;AAAA,WAAOE,IAAIC,IAAJ,EAAP;AAAA,IAFA,CAAP;AAGA;;;uBAEIL,G,EAAKM,I,EAAM;AAAA;;AACf,UAAOL,MAAMD,GAAN,EAAW;AACjBO,aAAS,EAAE,gBAAgB,kBAAlB,EADQ;AAEfC,YAAQ,MAFO;AAGfC,UAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHS,IAAX,EAKLJ,IALK,CAKA;AAAA,WAAO,OAAKC,aAAL,CAAmBC,GAAnB,CAAP;AAAA,IALA,CAAP;AAMA;;AAED;;;;gCACcA,G,EAAK;AAClB,OAAG,CAACA,IAAIQ,EAAR,EAAY,MAAM,IAAIC,KAAJ,CAAUT,IAAIU,UAAd,CAAN;AACZ,UAAOV,GAAP;AACA","file":"HttpService.js","sourcesContent":["class HttpService {\r\n\r\n\tget(url) {\r\n\t\treturn fetch(url)\r\n\t\t\t.then(res => this._handleErrors(res))\r\n\t\t\t.then(res => res.json())\r\n\t}\r\n\r\n\tpost(url, data) {\r\n\t\treturn fetch(url, {\r\n\t\t\theaders: { 'Content-type': 'application/json' }\r\n\t\t\t, method: 'post'\r\n\t\t\t, body: JSON.stringify(data)\r\n\t\t})\r\n\t\t\t.then(res => this._handleErrors(res))\r\n\t}\r\n\r\n\t/* if response is not ok, force catch promise */\r\n\t_handleErrors(res) {\r\n\t\tif(!res.ok) throw new Error(res.statusText)\r\n\t\treturn res\r\n\t}\r\n\r\n}\r\n"]}